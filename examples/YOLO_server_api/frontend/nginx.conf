# HTTP Configuration: Automatically redirect HTTP to HTTPS
server {
    listen 80;
    server_name your-domain.com;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS Configuration
server {
    listen 443 ssl http2;
    server_name your-domain.com;

    # Set the website's root directory to point to the frontend build output directory
    root /path/to/frontend/dist;

    # Specify the default index file
    index index.html;

    # Configure SSL certificates
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;

    # Recommended SSL settings for enhanced security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Handle static files
    location / {
        # Check if the requested file exists, otherwise fallback to index.html (suitable for Single Page Applications)
        try_files $uri /index.html;
    }

    # Proxy /api requests to the backend service
    location /api/ {
        proxy_pass http://backend-server.com:port; # Backend service address
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Necessary configuration to support WebSocket upgrades
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Configure caching for static resources
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|mp4)$ {
        expires 6M;
        access_log off;
        add_header Cache-Control "public";
    }

    # Configure the 404 error page
    error_page 404 /index.html;
}
