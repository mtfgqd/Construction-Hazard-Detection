server {
    # Listen on port 80 for incoming HTTP connections
    listen 80;
    # Specify the server name (domain or IP address)
    server_name changdar-server.mooo.com;

    # Set the root directory for serving static files
    root /usr/share/nginx/html;
    # Specify the default index file
    index index.html;

    # Define how Nginx should handle requests to the root URL
    location / {
        # Try to serve the requested file; if it doesn't exist, fallback to index.html
        try_files $uri $uri/ /index.html;
    }

    # Proxy requests starting with /api/ to the backend service
    location /api/ {
        # Forward the request to the backend server at the specified address
        proxy_pass http://streaming-web-backend:8000;
        # Preserve the original Host header
        proxy_set_header Host $host;
        # Pass the real client IP address to the backend
        proxy_set_header X-Real-IP $remote_addr;
        # Preserve the X-Forwarded-For header for proxy chaining
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Enable support for WebSocket connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Configure caching for static assets like images, CSS, JS, fonts, etc.
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|mp4)$ {
        # Set the cache expiration time to 6 months
        expires 6M;
        # Disable access logs for these requests
        access_log off;
        # Add a Cache-Control header to specify public caching
        add_header Cache-Control "public";
    }

    # Redirect 404 errors to index.html (useful for SPA routing)
    error_page 404 /index.html;

    # Handle WebSocket connections on the /ws/ endpoint
    location /ws/ {
        # Forward the WebSocket request to the backend server
        proxy_pass http://streaming-web-backend:8000;
        # Use HTTP/1.1 to support WebSocket connections
        proxy_http_version 1.1;
        # Set the necessary headers to upgrade the connection to WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # Preserve the original Host header
        proxy_set_header Host $host;
        # Pass the real client IP address to the backend
        proxy_set_header X-Real-IP $remote_addr;
        # Preserve the X-Forwarded-For header for proxy chaining
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
